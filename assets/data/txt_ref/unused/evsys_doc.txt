Каждая линия вида:
trigger_type trigger_arg(s) -> action_type name1, name2, action_type name
представляет собой связку из типа триггера и его названия, которые вызывают некие действия.

Помимо этого, такой директиве может предшествовать объявление требований, которое выглядит вот так:
req req_action_type req_action_name1, req_action_name2, req_action_type req_action_name

Как можно было заметить, парсер поддерживает перечисление названий разных представителей одного типа.
Система запоминает пройденные директивы по умолчанию, и больше их не показывает.
Чтобы показать их снова, нужно поставить флаг regular, который будет стирать из памяти после прохождения связку триггера и экшнов, чтобы их можно было повторять.
Например:
req char erika
regular
sel townhall -> scn a

при получении персонажа erika каждый выбор townhall будет показывать сцену a.

Если у директив одинаковый триггер, то они будут выбираться по очереди объявления (но если у такой директивы флаг regular, то она становится "фоллбечной" и всегда имеет минимальный приоритет)
Например:
regular
sel townhall -> scn a

sel townhall -> scn b

sel townhall -> scn c

сначала будет показана сцена b, затем c, затем постоянно будет показываться сцена a.

Кейворды:
none (только как триггер) - вызывает действия как только так сразу (полезно в связке с требованиями)
buy (только как триггер) - вызывает действие как только так сразу при наличии достаточных средств для покупки
dec (только как триггер) - вызывает действие как только так сразу, но при наличии соответствующего тега в десижнах
bat - битва (ее вызов или триггер после нее)
scn - сцена (ее вызов или триггер после ее просмотра)
sel - выбор точки на карте, если точка подходит под lock_*, то пока не будет добавлена точка с именем unlock, остальные варианты выбора на карте не будут показываться. Также если точка подходит под rm_*, то вариант выбора на карте с таким именем стирается. Соответственно, выступает в роли триггера, при вызове чего-либо на карте, или же в роли экшна добавляет на карту новую точку
char - добавление персонажа или триггер после его получения (для двух персонажей сразу выгоднее использовать char в требованиях, а вызывать события чреез none)
